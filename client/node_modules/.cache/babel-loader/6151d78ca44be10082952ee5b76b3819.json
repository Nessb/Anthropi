{"ast":null,"code":"var _jsxFileName = \"/Users/ness/Docx/anthropi-react/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // React Router\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Components\n\nimport App from './App';\nimport Admin from './Admin/Admin';\nimport Loading from './component/Loading/Loading.js';\nimport Presentation from './component/Main/Presentation.js'; // CSS\n\nimport './index.css';\nimport 'sanitize.css'; // PWA\n\nimport * as serviceWorker from './serviceWorker'; // Firebase\n\nimport * as firebase from 'firebase';\nimport config from './firebase';\n\nclass Root extends Component {\n  constructor() {\n    super(); // initialiser component en lui passant la config firebase.js\n\n    firebase.initializeApp(config);\n    this.state = {\n      loading: true\n    };\n  } // recupere les infos de la bdd quand le component se monte\n\n\n  componentWillMount() {\n    const ref = firebase.database().ref('test');\n    ref.on('value', snapshot => {\n      // MAJ du state\n      this.setState({\n        data: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(App, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      render: props => React.createElement(Admin, {\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/path#presentation\",\n      component: Presentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ness/Docx/anthropi-react/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","Route","Switch","App","Admin","Loading","Presentation","serviceWorker","firebase","config","Root","constructor","initializeApp","state","loading","componentWillMount","ref","database","on","snapshot","setState","data","val","render","props","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP,C,CAMA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB,C,CAEA;;AACA,OAAO,aAAP;AACA,OAAO,cAAP,C,CAEA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,YAAnB;;AAEA,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAC3Bc,EAAAA,WAAW,GAAI;AACb,YADa,CAEb;;AACAH,IAAAA,QAAQ,CAACI,aAAT,CAAuBH,MAAvB;AACA,SAAKI,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD,GAR0B,CAU3B;;;AACAC,EAAAA,kBAAkB,GAAI;AACpB,UAAMC,GAAG,GAAGR,QAAQ,CAACS,QAAT,GAAoBD,GAApB,CAAwB,MAAxB,CAAZ;AAEAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC1B;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,QAAQ,CAACG,GAAT,EADM;AAEZR,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAND;AAOD;;AAEDS,EAAAA,MAAM,GAAI;AACR,QAAI,KAAKV,KAAL,CAAWC,OAAf,EAAwB;AACtB,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAEU,KAAK,IACjC,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWQ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,MAAM,EAAEG,KAAK,IACtC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWQ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAQE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,oBAAZ;AAAiC,MAAA,SAAS,EAAEf,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF;AAcD;;AAzC0B;;AA4C7BR,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n// React Router\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n// Components\nimport App from './App'\nimport Admin from './Admin/Admin'\nimport Loading from './component/Loading/Loading.js'\nimport Presentation from './component/Main/Presentation.js'\n\n// CSS\nimport './index.css'\nimport 'sanitize.css'\n\n// PWA\nimport * as serviceWorker from './serviceWorker'\n\n// Firebase\nimport * as firebase from 'firebase'\nimport config from './firebase'\n\nclass Root extends Component {\n  constructor () {\n    super()\n    // initialiser component en lui passant la config firebase.js\n    firebase.initializeApp(config)\n    this.state = {\n      loading: true\n    }\n  }\n\n  // recupere les infos de la bdd quand le component se monte\n  componentWillMount () {\n    const ref = firebase.database().ref('test')\n\n    ref.on('value', snapshot => {\n      // MAJ du state\n      this.setState({\n        data: snapshot.val(),\n        loading: false\n      })\n    })\n  }\n\n  render () {\n    if (this.state.loading) {\n      return <Loading />\n    }\n    return (\n      <Router>\n        <Switch>\n          {/* Chemin exacte  */}\n          <Route exact path='/' render={props => (\n            <App data={this.state.data} />\n          )} />\n          <Route exact path='/admin' render={props => (\n            <Admin data={this.state.data} />\n          )} />\n          <Route path='/path#presentation' component={Presentation} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(<Root />, document.getElementById('root'))\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}