{"ast":null,"code":"var _jsxFileName = \"/Users/ness/Docx/anthropi-react/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // React Router\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport 'sanitize.css';\nimport App from './App';\nimport Admin from './Admin/Admin';\nimport * as serviceWorker from './serviceWorker';\n\nclass Root extends Component {\n  constructor() {\n    super(); // initialiser component en lui passant la config firebase.js\n\n    firebase.initializeApp(config);\n    this.state = {\n      loading: true\n    };\n  } // recupere les infos de la bdd quand le component se monte\n\n\n  componentWillMount() {\n    const ref = firebase.database().ref('laurent');\n    ref.on('value', snapshot => {\n      // MAJ du state\n      this.setState({\n        data: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/admin\",\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ness/Docx/anthropi-react/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Router","Route","Switch","App","Admin","serviceWorker","Root","constructor","firebase","initializeApp","config","state","loading","componentWillMount","ref","database","on","snapshot","setState","data","val","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP;AAKA,OAAO,aAAP;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,GAAI;AACb,YADa,CAEb;;AACAC,IAAAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD,GAR0B,CAU3B;;;AACAC,EAAAA,kBAAkB,GAAI;AACpB,UAAMC,GAAG,GAAGN,QAAQ,CAACO,QAAT,GAAoBD,GAApB,CAAwB,SAAxB,CAAZ;AAEAA,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgBC,QAAQ,IAAI;AAC1B;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,QAAQ,CAACG,GAAT,EADM;AAEZR,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAND;AAOD;;AAEDS,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAElB,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF;AASD;;AAjC0B;;AAoC7BN,QAAQ,CAACuB,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\n// React Router\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './index.css'\nimport 'sanitize.css'\nimport App from './App'\nimport Admin from './Admin/Admin'\nimport * as serviceWorker from './serviceWorker'\n\nclass Root extends Component {\n  constructor () {\n    super()\n    // initialiser component en lui passant la config firebase.js\n    firebase.initializeApp(config)\n    this.state = {\n      loading: true\n    }\n  }\n\n  // recupere les infos de la bdd quand le component se monte\n  componentWillMount () {\n    const ref = firebase.database().ref('laurent')\n\n    ref.on('value', snapshot => {\n      // MAJ du state\n      this.setState({\n        data: snapshot.val(),\n        loading: false\n      })\n    })\n  }\n\n  render () {\n    return (\n      <Router>\n        <Switch>\n          {/* Chemin exacte  */}\n          <Route exact path='/' component={App} />\n          <Route exact path='/admin' component={Admin} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(<Root />, document.getElementById('root'))\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}