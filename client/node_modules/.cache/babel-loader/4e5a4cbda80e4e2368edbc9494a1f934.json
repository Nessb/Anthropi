{"ast":null,"code":"var _jsxFileName = \"/Users/ness/Docx/anthropi-react/src/Admin/Admin.js\";\nimport React, { Component } from 'react';\nimport AdminForm from './AdminForm';\nimport './Admin.css'; // Firebase\n\nimport * as firebase from 'firebase';\n\nclass Admin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //user identifiant\n      uid: null,\n      //proprietaire de la bdd\n      owner: null // Laisse le dernier utilisateur connecter\n\n    };\n\n    this.authenticate = event => {\n      //Ne recharge pas la page\n      event.preventDefault();\n      console.log(this.mail.value, this.password.value);\n      firebase.auth().signInWithEmailAndPassword(this.mail.value, this.password.value).then(user => this.authHandler(user));\n    };\n\n    this.authHandler = user => {\n      const ref = firebase.database().ref('test/owner');\n      ref.on('value', snapshot => {\n        this.setState({\n          uid: firebase.auth().currentUser.uid,\n          // uid: user.uid,\n          owner: snapshot.val()\n        });\n      });\n    };\n\n    this.logout = () => {\n      firebase.auth().signOut().then(this.setState({\n        uid: null\n      }));\n    };\n\n    this.renderLogin = () => React.createElement(\"div\", {\n      className: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"adminheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"adminh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Administration\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.authenticate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Mail\",\n      type: \"email\",\n      ref: input => this.mail = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"Mot de passe\",\n      type: \"password\",\n      ref: input => this.password = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Se connecter\"))));\n  }\n\n  componentDidMount() {\n    const user = firebase.auth().currentUser; //  console.log(user)\n\n    if (user) {\n      this.authHandler(user);\n    }\n  }\n\n  render() {\n    // si il n'y a pas de connexion\n    if (!this.state.uid) {\n      return this.renderLogin();\n    }\n\n    if (this.state.uid !== this.state.owner) {\n      return this.renderLogin();\n    }\n\n    const form = Object.keys(this.props.data.contact).map(key => React.createElement(AdminForm, {\n      key: key,\n      id: key,\n      data: this.props.data.contact[key],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"adminheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"adminh1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Administration\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), form);\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/ness/Docx/anthropi-react/src/Admin/Admin.js"],"names":["React","Component","AdminForm","firebase","Admin","state","uid","owner","authenticate","event","preventDefault","console","log","mail","value","password","auth","signInWithEmailAndPassword","then","user","authHandler","ref","database","on","snapshot","setState","currentUser","val","logout","signOut","renderLogin","input","componentDidMount","render","form","Object","keys","props","data","contact","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AdminForm from './AdminForm'\nimport './Admin.css'\n// Firebase\nimport * as firebase from 'firebase'\n\n\nclass Admin extends Component {\n\n    state = {\n    //user identifiant\n    uid: null,\n    //proprietaire de la bdd\n    owner: null\n  }\n  // Laisse le dernier utilisateur connecter\n  componentDidMount () {\n    const user = firebase.auth().currentUser\n    //  console.log(user)\n    if (user) {\n      this.authHandler(user)\n    }\n  }\n\n  authenticate = event => {\n    //Ne recharge pas la page\n    event.preventDefault()\n    console.log(this.mail.value, this.password.value)\n    firebase.auth().signInWithEmailAndPassword(this.mail.value, this.password.value)\n      .then(user => this.authHandler(user) )\n  }  \n\n  authHandler = user => {\n    const ref = firebase.database().ref('test/owner')\n    ref.on('value', snapshot => {\n      this.setState({\n        uid: firebase.auth().currentUser.uid,\n        // uid: user.uid,\n        owner: snapshot.val()\n      })\n    })\n  }\n\n    //Se déconnecter\n    logout = () => {\n    firebase.auth().signOut()\n      .then(this.setState({ uid: null }))\n  }\n\n  renderLogin = () => (\n    <div className='admin'>\n      <header className='adminheader'>\n        <h1 className='adminh1'>Administration</h1>\n      </header>\n      <br />\n      <section>\n        <form onSubmit={this.authenticate}>\n          <input placeholder='Mail' type='email' ref={input => this.mail = input} />\n          <input placeholder='Mot de passe' type='password' ref={input => this.password = input} />\n          <button type='submit'>Se connecter</button>\n        </form>\n      </section>\n      {/* <footer>\n          <button onClick={this.logout}>Se déconnecter</button>\n        </footer> */}\n    </div>\n  )\n\n\n  render () {\n    // si il n'y a pas de connexion\n    if (!this.state.uid) {\n      return this.renderLogin()\n    }\n\n    if (this.state.uid !== this.state.owner) {\n      return this.renderLogin()\n    }\n\n    const form = Object.keys(this.props.data.contact).map(key => (\n      <AdminForm key={key} id={key} data={this.props.data.contact[key]} />\n    ))\n    return (\n      <div className='admin'>\n        <header className='adminheader'>\n          <h1 className='adminh1'>Administration</h1>\n        </header>\n        <br />\n        {form}\n      </div>\n    )\n  }\n}\nexport default Admin\n"]},"metadata":{},"sourceType":"module"}