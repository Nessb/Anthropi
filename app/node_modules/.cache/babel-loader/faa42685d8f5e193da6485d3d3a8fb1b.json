{"ast":null,"code":"import _objectSpread from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/ness/Docx/anthropi-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';// Firebase\nimport*as firebase from'firebase';var AdminForm=/*#__PURE__*/function(_Component){_inherits(AdminForm,_Component);// Initialiser le component lorsqu'il se créé en lui passsant des infos\nfunction AdminForm(props){var _this;_classCallCheck(this,AdminForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(AdminForm).call(this,props));_this.updateContent=function(){firebase.database().ref(\"test/contact/\".concat(_this.props.id)).set(_objectSpread({},_this.state.data));};_this.handleChange=function(event){//Copie de data\nvar data=_objectSpread({},_this.state.data);//Modifier le content\ndata.content=event.target.value;// Maj data\n_this.setState({data:data});};var _data=_this.props.data;_this.state={data:_data};return _this;}//enregistrer l'etat actuelle avant changement\n_createClass(AdminForm,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.updateContent();}//MAJ Contenu\n},{key:\"render\",value:function render(){return React.createElement(\"section\",null,React.createElement(\"p\",null,\"Remplir les champs\"),React.createElement(\"input\",{placeholder:\"Tapez votre texte\",value:this.state.data.content// Event pour lancer fonction lors d'un changement du input\n,onChange:this.handleChange}));}}]);return AdminForm;}(Component);export default AdminForm;","map":{"version":3,"sources":["/Users/ness/Docx/anthropi-react/client/src/Admin/AdminForm.js"],"names":["React","Component","firebase","AdminForm","props","updateContent","database","ref","id","set","state","data","handleChange","event","content","target","value","setState"],"mappings":"27BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA;AACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,UAA1B,C,GAEMC,CAAAA,S,mEACN;AACE,mBAAaC,KAAb,CAAoB,2CAClB,2EAAMA,KAAN,GADkB,MAYrBC,aAZqB,CAYL,UAAM,CACnBH,QAAQ,CAACI,QAAT,GAAoBC,GAApB,wBAAwC,MAAKH,KAAL,CAAWI,EAAnD,GAAyDC,GAAzD,kBACG,MAAKC,KAAL,CAAWC,IADd,GAGD,CAhBmB,OAkBlBC,YAlBkB,CAkBH,SAAAC,KAAK,CAAI,CACpB;AACA,GAAMF,CAAAA,IAAI,kBAAO,MAAKD,KAAL,CAAWC,IAAlB,CAAV,CACA;AACAA,IAAI,CAACG,OAAL,CAAeD,KAAK,CAACE,MAAN,CAAaC,KAA5B,CACA;AACA,MAAKC,QAAL,CAAc,CAAEN,IAAI,CAAJA,IAAF,CAAd,EACD,CAzBe,CAElB,GAAMA,CAAAA,KAAI,CAAG,MAAKP,KAAL,CAAWO,IAAxB,CACA,MAAKD,KAAL,CAAa,CAAEC,IAAI,CAAJA,KAAF,CAAb,CAHkB,aAInB,CAEC;qFACsB,CAClB,KAAKN,aAAL,GACD,CAEN;uCAgBW,CACR,MACE,oCACA,kDADA,CAEE,6BAAO,WAAW,CAAC,mBAAnB,CAEE,KAAK,CAAE,KAAKK,KAAL,CAAWC,IAAX,CAAgBG,OACtB;AAHH,CAIG,QAAQ,CAAE,KAAKF,YAJlB,EAFF,CADF,CAWD,C,uBAzCqBX,S,EA2CxB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react'\n\n// Firebase\nimport * as firebase from 'firebase'\n\nclass AdminForm extends Component {\n// Initialiser le component lorsqu'il se créé en lui passsant des infos\n  constructor (props) {\n    super(props)\n    const data = this.props.data\n    this.state = { data }\n  }\n\n    //enregistrer l'etat actuelle avant changement\n    componentDidUpdate () {\n        this.updateContent()\n      }\n\n //MAJ Contenu\n updateContent = () => {\n    firebase.database().ref(`test/contact/${this.props.id}`).set({\n    ...this.state.data\n    })\n  }  \n    //fonction pour recuperer les infos input\n    handleChange = event => {\n        //Copie de data\n        const data = {...this.state.data}\n        //Modifier le content\n        data.content = event.target.value\n        // Maj data\n        this.setState({ data })\n      }\n\n  render () {\n    return (\n      <section>\n      <p>Remplir les champs</p>\n        <input placeholder='Tapez votre texte'\n          \n          value={this.state.data.content}\n           // Event pour lancer fonction lors d'un changement du input\n           onChange={this.handleChange}\n        />\n      </section>\n    )\n  }\n}\nexport default AdminForm\n"]},"metadata":{},"sourceType":"module"}