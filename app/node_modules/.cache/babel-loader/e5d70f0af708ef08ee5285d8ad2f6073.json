{"ast":null,"code":"var _jsxFileName = \"/Users/ness/Docx/anthropi-react/client/src/components/Main/BlockFormations.js\";\nimport React from 'react';\nimport './BlockFormations.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Flip from 'react-reveal/Flip'; // import axios from 'axios'\n\nclass BlockFormations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: ''\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    axios({\n      method: 'POST',\n      url: 'http://localhost:3002/send',\n      data: this.state\n    }).then(response => {\n      if (response.data.status === 'success') {\n        alert('Message Envoyée.');\n        this.resetForm();\n      } else if (response.data.status === 'fail') {\n        alert('Échec de l\\'envoie du message.');\n      }\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      name: '',\n      email: ''\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"mb-5 mt-5\",\n      id: \"blockformation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Flip, {\n      top: true,\n      duration: 1500,\n      delay: 1500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Entrez votre mail dans le formulaire ci-dessous, et vous recevrez la plaquette des p\\xE9riodes de formations en pi\\xE8ce jointe.\"), React.createElement(\"form\", {\n      className: \"contact-form mt-5\",\n      onSubmit: this.handleSubmit.bind(this),\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"flex-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form  mt-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"form-control\",\n      placeholder: \"Nom\",\n      value: this.state.name,\n      onChange: this.onNameChange.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.onEmailChange.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"btncolor\",\n      className: \"btn btn-md btn-block ml-0 mb-0 text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Envoyez\"))))))));\n  }\n\n} // class App extends React.Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       name: '',\n//       email: '',\n//       message: ''\n//     }\n//   }\n//   handleSubmit (e) {\n//     e.preventDefault()\n//     axios({\n//       method: 'POST',\n//       url: 'http://localhost:3002/send',\n//       data: this.state\n//     }).then((response) => {\n//       if (response.data.status === 'success') {\n//         alert('Message Envoyée.')\n//         this.resetForm()\n//       } else if (response.data.status === 'fail') {\n//         alert('Échec de l\\'envoie du message.')\n//       }\n//     })\n//   }\n//   resetForm () {\n//     this.setState({ name: '', email: '', message: '' })\n//   }\n//   render () {\n//     return (\n//       <div className='App'>\n//         <form id='contact-form' onSubmit={this.handleSubmit.bind(this)} method='POST'>\n//           <div className='form-group'>\n//             <label htmlFor='name'>Name</label>\n//             <input type='text' className='form-control' id='name' value={this.state.name} onChange={this.onNameChange.bind(this)} />\n//           </div>\n//           <div className='form-group'>\n//             <label htmlFor='exampleInputEmail1'>Email address</label>\n//             <input type='email' className='form-control' id='email' aria-describedby='emailHelp' value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n//           </div>\n//           <div className='form-group'>\n//             <label htmlFor='message'>Message</label>\n//             <textarea className='form-control' rows='5' id='message' value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n//           </div>\n//           <button type='submit' className='btn btn-primary'>Submit</button>\n//         </form>\n//       </div>\n//     )\n//   }\n//   onNameChange (event) {\n//     this.setState({ name: event.target.value })\n//   }\n//   onEmailChange (event) {\n//     this.setState({ email: event.target.value })\n//   }\n//   onMessageChange (event) {\n//     this.setState({ message: event.target.value })\n//   }\n// }\n// export default App","map":{"version":3,"sources":["/Users/ness/Docx/anthropi-react/client/src/components/Main/BlockFormations.js"],"names":["React","Container","Row","Col","Flip","BlockFormations","Component","constructor","props","state","name","email","handleSubmit","e","preventDefault","axios","method","url","data","then","response","status","alert","resetForm","setState","render","bind","onNameChange","onEmailChange"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './BlockFormations.css'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Flip from 'react-reveal/Flip'\n// import axios from 'axios'\n\nclass BlockFormations extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: ''\n    }\n  }\n\n  handleSubmit (e) {\n    e.preventDefault()\n    axios({\n      method: 'POST',\n      url: 'http://localhost:3002/send',\n      data: this.state\n    }).then((response) => {\n      if (response.data.status === 'success') {\n        alert('Message Envoyée.')\n        this.resetForm()\n      } else if (response.data.status === 'fail') {\n        alert('Échec de l\\'envoie du message.')\n      }\n    })\n  }\n\n  resetForm () {\n    this.setState({ name: '', email: '' })\n  }\n\n  render () {\n    return (\n      <Container className='mb-5 mt-5' id='blockformation'>\n        <Flip top duration={1500} delay={1500}>\n          <h4>Entrez votre mail dans le formulaire ci-dessous, et vous recevrez la plaquette des périodes de formations en pièce jointe.</h4>\n          {/* <Fade duration={500} delay={500}> */}\n          <form className='contact-form mt-5' onSubmit={this.handleSubmit.bind(this)} method='POST'>\n            <Row>\n              <Col className='flex-center mb-4'>\n                <div className='card'>\n                  <div className='card-body'>\n                    <div className='md-form  mt-0'>\n                      <input type='text' id='name' className='form-control' placeholder='Nom' value={this.state.name} onChange={this.onNameChange.bind(this)} required />\n                      <label htmlFor='name' />\n                    </div>\n                    <div className='md-form'>\n                      <input type='email' id='email' className='form-control' placeholder='Email' value={this.state.email} onChange={this.onEmailChange.bind(this)} required />\n                      <label htmlFor='email' />\n                    </div>\n                    <button type='submit' id='btncolor' className='btn btn-md btn-block ml-0 mb-0 text-white'>Envoyez</button>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </form>\n          {/* </Fade> */}\n        </Flip>\n      </Container>\n\n    )\n  }\n  \n}\n\n// class App extends React.Component {\n//   constructor (props) {\n//     super(props)\n//     this.state = {\n//       name: '',\n//       email: '',\n//       message: ''\n//     }\n//   }\n\n//   handleSubmit (e) {\n//     e.preventDefault()\n//     axios({\n//       method: 'POST',\n//       url: 'http://localhost:3002/send',\n//       data: this.state\n//     }).then((response) => {\n//       if (response.data.status === 'success') {\n//         alert('Message Envoyée.')\n//         this.resetForm()\n//       } else if (response.data.status === 'fail') {\n//         alert('Échec de l\\'envoie du message.')\n//       }\n//     })\n//   }\n\n//   resetForm () {\n//     this.setState({ name: '', email: '', message: '' })\n//   }\n\n//   render () {\n//     return (\n//       <div className='App'>\n//         <form id='contact-form' onSubmit={this.handleSubmit.bind(this)} method='POST'>\n//           <div className='form-group'>\n//             <label htmlFor='name'>Name</label>\n//             <input type='text' className='form-control' id='name' value={this.state.name} onChange={this.onNameChange.bind(this)} />\n//           </div>\n//           <div className='form-group'>\n//             <label htmlFor='exampleInputEmail1'>Email address</label>\n//             <input type='email' className='form-control' id='email' aria-describedby='emailHelp' value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n//           </div>\n//           <div className='form-group'>\n//             <label htmlFor='message'>Message</label>\n//             <textarea className='form-control' rows='5' id='message' value={this.state.message} onChange={this.onMessageChange.bind(this)} />\n//           </div>\n//           <button type='submit' className='btn btn-primary'>Submit</button>\n//         </form>\n//       </div>\n//     )\n//   }\n\n//   onNameChange (event) {\n//     this.setState({ name: event.target.value })\n//   }\n\n//   onEmailChange (event) {\n//     this.setState({ email: event.target.value })\n//   }\n\n//   onMessageChange (event) {\n//     this.setState({ message: event.target.value })\n//   }\n// }\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}